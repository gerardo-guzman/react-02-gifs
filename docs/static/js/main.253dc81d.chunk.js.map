{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","handleSubmit","type","value","onChange","target","handleInputChange","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","console","log","image","key","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,oCACI,0BAAMC,SAAW,SAACC,GAAD,OAVJ,SAACA,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACtCN,EAAc,KAMUO,CAAaL,KACjC,2BACIM,KAAK,OACLC,MAAOV,EACPW,SAAW,SAACR,GAAD,OAlBD,SAACA,GACvBF,EAAcE,EAAES,OAAOF,OAiBOG,CAAkBV,MAExC,4BAAQM,KAAK,UAAb,cCzBHK,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,QACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCJHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,8DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARvB,kBAYZY,GAZY,4CAAH,sDCEPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OAPAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAK,SAAAV,GAAI,OACNQ,EAAS,CAACT,KAAMC,EAAMM,SAAS,SAExC,CAACb,IAEGc,EDLiBI,CAAalB,GAA9BM,EAR4B,EAQ5BA,KAAMO,EARsB,EAQtBA,QAIb,OAHAM,QAAQC,IAAId,GACZa,QAAQC,IAAIP,GAGR,oCACA,4BAAMb,GAEFa,EAAS,cACP,yBAAKjB,UAAU,cAAf,OAEMU,QAFN,IAEMA,OAFN,EAEMA,EAAME,KAAI,SAAAa,GAAK,OACX,kBAAC,EAAD,eACIC,IAAKD,EAAM5B,IACP4B,UEtBnBE,EAAe,WAAM,MAGM9C,mBAAS,CAAC,iBAHhB,mBAGvB+C,EAHuB,KAGXhD,EAHW,KAK9B,OACI,oCACI,gDACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQgD,EAAWhB,KAAI,SAACR,EAAUyB,GAAX,OACX,kBAAC,EAAD,CAASH,IAAKtB,EACdA,SAAUA,UCblC0B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.253dc81d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cat =>  [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ (e) => handleSubmit(e) }>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ (e) => handleInputChange(e) }\r\n                />  \r\n                <button type=\"submit\">Agregar</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=8&api_key=wSRV6FYAhmQtQCnZzBesR33dtrFHSdOH`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}\r\n\r\n\r\n","import React, {  } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    /* const [images, setimages] = useState([]);\r\n    useEffect( () => {\r\n        getGifs(category).then(gifs => \r\n            setimages(gifs)\r\n        )\r\n    }, [category]); */\r\n    const {data, loading} = useFetchGifs(category);\r\n    console.log(data)\r\n    console.log(loading)\r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n        {\r\n            loading? 'cargando...'\r\n            : <div className=\"card-greed\">\r\n                {\r\n                    data?.map(image => (\r\n                        <GifGridItem \r\n                            key={image.id}\r\n                            {...image} />\r\n                    ))\r\n                }\r\n            </div>\r\n        }\r\n        {/* <div className=\"card-greed\">\r\n                {\r\n                    images.map(image => (\r\n                        <GifGridItem \r\n                            key={image.id}\r\n                            {...image} />\r\n                    ))\r\n                }\r\n        </div> */}\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(gifs => \r\n                setstate({data: gifs, loading: false})\r\n            )\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One PunchMan', 'Naruto', 'Boku no Hero'];\r\n    const [categories, setCategories] = useState(['Boku no hero']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Busca un Gif! :D</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category, index) => (\r\n                        <GifGrid key={category} \r\n                        category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}